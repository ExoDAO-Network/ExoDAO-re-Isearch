/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class RSET {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected RSET(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RSET obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      IBJNI.delete_RSET(swigCPtr);
    }
    swigCPtr = 0;
  }

  public RSET(long Reserve) {
    this(IBJNI.new_RSET__SWIG_0(Reserve), true);
  }

  public RSET() {
    this(IBJNI.new_RSET__SWIG_1(), true);
  }

  public RSET getself() {
    return new RSET(IBJNI.RSET_getself(swigCPtr, this), false);
  }

  public void Write(String Path) {
    IBJNI.RSET_Write(swigCPtr, this, Path);
  }

  public void Read(String Path) {
    IBJNI.RSET_Read(swigCPtr, this, Path);
  }

  public RSET Cat(RSET OtherSet) {
    return new RSET(IBJNI.RSET_Cat(swigCPtr, this, RSET.getCPtr(OtherSet), OtherSet), false);
  }

  public void LoadTable(String FileName) {
    IBJNI.RSET_LoadTable(swigCPtr, this, FileName);
  }

  public void SaveTable(String FileName) {
    IBJNI.RSET_SaveTable(swigCPtr, this, FileName);
  }

  public double GetMaxScore() {
    return IBJNI.RSET_GetMaxScore(swigCPtr, this);
  }

  public double GetMinScore() {
    return IBJNI.RSET_GetMinScore(swigCPtr, this);
  }

  public boolean FilterDateRange(DATERANGE Range) {
    return IBJNI.RSET_FilterDateRange(swigCPtr, this, DATERANGE.getCPtr(Range), Range);
  }

  public RESULT GetEntry(long Index) {
    return new RESULT(IBJNI.RSET_GetEntry(swigCPtr, this, Index), true);
  }

  public int GetScaledScore(double UnscaledScore, int ScaleFactor) {
    return IBJNI.RSET_GetScaledScore(swigCPtr, this, UnscaledScore, ScaleFactor);
  }

  public long GetHitTotal() {
    return IBJNI.RSET_GetHitTotal(swigCPtr, this);
  }

  public long Find(String Key) {
    return IBJNI.RSET_Find(swigCPtr, this, Key);
  }

  public long GetTotalEntries() {
    return IBJNI.RSET_GetTotalEntries(swigCPtr, this);
  }

  public void SortBy(SortBy SortBy) {
    IBJNI.RSET_SortBy(swigCPtr, this, SortBy.swigValue());
  }

  public void SortByCategoryMagnetism(double Factor) {
    IBJNI.RSET_SortByCategoryMagnetism(swigCPtr, this, Factor);
  }

  public long Reduce(int TermCount) {
    return IBJNI.RSET_Reduce(swigCPtr, this, TermCount);
  }

  public long DropByTerms(long TermCount) {
    return IBJNI.RSET_DropByTerms(swigCPtr, this, TermCount);
  }

  public long DropByScore(double Score) {
    return IBJNI.RSET_DropByScore(swigCPtr, this, Score);
  }

  public RESULT __getitem__(int i) {
    return new RESULT(IBJNI.RSET___getitem__(swigCPtr, this, i), true);
  }

}
